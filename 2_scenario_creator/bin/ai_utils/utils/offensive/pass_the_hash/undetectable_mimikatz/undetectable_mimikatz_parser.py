from ai_utils.scenarios.globals import FileUtils
import logging
import re


class UndetectableMimikatzParser(object):

    def __init__(self, output_path, success_pattern):
        logging.debug('Executing UndetectableMimikatzParser constructor. output_path: (redacted), success_pattern: {}'.format(success_pattern))
        self.output_path = output_path
        self.success_pattern = success_pattern

    def parse_pth_output(self):
        success = False
        command_output, err = self.read_pass_the_hash_command_output()
        if not err:
            success, err = self.check_expression_in_pass_the_hash_command_output(command_output)
        return success, err

    def read_pass_the_hash_command_output(self):
        logging.debug('Executing read_pass_the_hash_command_output')
        command_output, err = '', ''
        if FileUtils.FileExists(self.output_path):
            command_output = FileUtils.ReadFromFile(self.output_path)
            if command_output:
                logging.info('Pass the hash command output: {}'.format(command_output))
            else:
                err = 'Output file generated by command is empty. This means that the remote command was not successful'
        else:
            err = 'Remote command output file has not been created. This means that the command executed passing the hash has failed'
        return command_output, err

    def check_expression_in_pass_the_hash_command_output(self, command_output):
        logging.debug('Executing check_expression_in_pass_the_hash_command_output. command_output: {}'.format(command_output))
        success, err = False, ''
        pattern = re.compile(self.success_pattern)
        if pattern.search(command_output):
            success = True
        else:
            err = 'Test Success Pattern "{}" could not be found in the pass the hash command output file. Remote command executed using pass the hash has failed'.format(self.success_pattern)
            logging.error('Remote Output Command file contents: {0}'.format(command_output))
        return success, err
